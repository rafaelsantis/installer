name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      PACKAGE_VERSION: ${{ steps.get_infos.outputs.PACKAGE_VERSION }}
      NAME_VERSION: ${{ steps.get_infos.outputs.NAME_VERSION }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version and Name
        id: get_infos
        run: |
         PACKAGE_NAME=$(node -pe "require('./package.json').name")
         PACKAGE_VERSION=$(node -pe "require('./package.json').version")
         NAME_VERSION=$(echo "${PACKAGE_NAME}_${PACKAGE_VERSION}" | tr -d -c '[:alnum:]._-')
         
         echo "PACKAGE_NAME=${PACKAGE_NAME}" >> "$GITHUB_OUTPUT"
         echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"
         
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_infos.outputs.PACKAGE_VERSION }}
          release_name: "Release v${{ steps.get_infos.outputs.PACKAGE_VERSION }} (Node.js 14, 18)"
          draft: false
          prerelease: false

  build_and_upload:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        node-version: [14.x, 18.x]

    environment:
      name: production

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build project
        run: |
          npm install -g mbt
          mbt build -p xsa -t ./ --mtar "tax4b.${needs.create-release.outputs.NAME_VERSION}_${matrix.node-version}.mtar"
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "./tax4b.${needs.create-release.outputs.NAME_VERSION}_${matrix.node-version}.mtar"
          asset_name: "tax4b.${needs.create-release.outputs.NAME_VERSION}_${matrix.node-version}.mtar"
          asset_content_type: application/rar
